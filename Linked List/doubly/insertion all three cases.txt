import java.util.*;
class Node
{
    int data;
    Node prev;
    Node next;
    
    public Node(int data)
    {
        this.data=data;
        this.prev=null;
        this.next=null;
    }
}
class LL
{
    public void print(Node head)
    {
        Node curr=head;
        while(curr!=null)
        {
            System.out.print(curr.data+"->");
            curr=curr.next;
        }
        System.out.print("null");
        System.out.println();
    }
    
    // insertion at beginning
    public Node insertAtBeg(Node head,int data)
    {
        Node newnode=new Node(data);
        if(head==null)
        {
            head=newnode;
            return head;
        }
        newnode.next=head;
        head.prev=newnode;
        head=newnode;
        return head;
    }
    
    // insertion at last
    public Node insertAtEnd(Node head,int data)
    {
        Node newnode=new Node(data);
        if(head==null)
        {
            head=newnode;
            return head;
        }
        Node curr=head;
        while(curr.next!=null)
        {
            curr=curr.next;
        }
        curr.next=newnode;
        newnode.prev=curr;
        return head;
    }
    
    // insertion at middle
    public Node insertAtMid(Node head,int data,int pos)
    {
        Node newnode=new Node(data);
        int count=1;
        Node prev=null;
        Node curr=head;
        while(count<=pos)
        {
            prev=curr;
            curr=curr.next;
            count++;
        }
        prev.next=newnode;
        newnode.prev=curr.prev;
        newnode.next=curr;
        curr.prev=newnode;
        return head;
    }
    
}
public class Main
{
	public static void main(String[] args)
	{
	    Scanner s=new Scanner(System.in);
	    LL ll=new LL();
	    int n=s.nextInt();
	    Node head=new Node(s.nextInt());
	    Node tail=head;
	    while(n!=1)
	    {
	        tail.next=new Node(s.nextInt());
	        tail.next.prev=tail;
	        tail=tail.next;
	        n--;
	    }
	    ll.print(head);
	    
	    head=ll.insertAtBeg(head,10);
	    ll.print(head);
	    
	    head=ll.insertAtEnd(head,50);
	    ll.print(head);
	    
	    head=ll.insertAtMid(head,100,4);
	    ll.print(head);
	}
}
